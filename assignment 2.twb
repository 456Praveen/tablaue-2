<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Superstore_us' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='datagrid.autoupdate.max.filesize' value='100000000000' />
    <preference name='ui.discoverpane.stagingWebContentSwitch' value='1' />
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.registrationform.stagingWebContentSwitch' value='1' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
        <calculation class='tableau' formula='50000' />
        <range granularity='1000' min='0' />
      </column>
      <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
        <calculation class='tableau' formula='18.400000000000002' />
        <range granularity='0.10000000000000001' max='100.0' min='1.0' />
      </column>
      <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
        <calculation class='tableau' formula='500000' />
        <range granularity='25000' min='100000' />
      </column>
      <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
        <calculation class='tableau' formula='&quot;Names&quot;' />
        <members>
          <member value='&quot;\% quota ascending&quot;' />
          <member value='&quot;\% quota descending&quot;' />
          <member value='&quot;Names&quot;' />
        </members>
      </column>
      <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
        <calculation class='tableau' formula='0.59999999999999998' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
        <calculation class='tableau' formula='0.064000000000000001' />
        <range granularity='0.001' max='0.25' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Sales Target Extract' inline='true' name='federated.0z0pi331stuxay1ce6y5f1yxvsw9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Target' name='hyper.0b9ww9a086u1d41dqjy2d0vs8f1i'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/tablue assignments/assignment 2.twb Files/Data/Superstore/Sales Target.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.0b9ww9a086u1d41dqjy2d0vs8f1i' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <family>Sheet1</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1185</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>2</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales Target]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Target</remote-alias>
            <ordinal>3</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1045</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.315254' measure-ordering='alphabetic' measure-percentage='0.264407' parameter-percentage='0.420339' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sales Commission' inline='true' name='Sales Planning new' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Commission' name='Sales Planning newleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/tablue assignments/assignment 2.twb Files/Data/Superstore/Sales Commission.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='Sales Planning newleaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sales Person]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Person</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>41</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>43</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Achievement (estimated)' datatype='integer' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
      </column>
      <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
      </column>
      <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary]' />
      </column>
      <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
      </column>
      <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Estimate Compensation label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Estimated Compensation:&quot;' />
        <aliases>
          <alias key='&quot;Estimated Compensation:&quot;' value='Estimated total compensation' />
        </aliases>
      </column>
      <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
      </column>
      <column datatype='datetime' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Sales Person1' datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
      </column>
      <column datatype='string' name='[Total Sales label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total Sales:&quot;' />
        <aliases>
          <alias key='&quot;Total Sales:&quot;' value='Total' />
        </aliases>
      </column>
      <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Call Center)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Next Button)' hidden='true' name='[Action (Next Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2310128142449424]' />
        </groupfilter>
      </group>
      <group caption='Action (Previous Button)' hidden='true' name='[Action (Previous Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Next (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.367797' measure-ordering='alphabetic' measure-percentage='0.379661' parameter-percentage='0.252542' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Achievement (variable) (copy):nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;50-75\%&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Below 50\%&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;100\% +&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;75-100\%&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#5f9ed1'>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
          <calculation class='tableau' formula='50000' />
          <range granularity='1000' min='0' />
        </column>
        <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
          <calculation class='tableau' formula='18.400000000000002' />
          <range granularity='0.10000000000000001' max='100.0' min='1.0' />
        </column>
        <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
          <calculation class='tableau' formula='500000' />
          <range granularity='25000' min='100000' />
        </column>
        <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
          <calculation class='tableau' formula='&quot;Names&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='dataengine.42019.618651678240' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='dataengine.42019.618651678240leaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/tablue assignments/assignment 2.twb Files/Data/Superstore/Sample - Superstore.hyper' default-settings='yes' port='' sslmode='' username='tableau_internal_user'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.618651678240leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>5136</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3095</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1419</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1482</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1134</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1134</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>580</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>54</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>719</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2226</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2203</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3420</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4120</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <family>People</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>22</ordinal>
            <family>Returns</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' value='Count of Customers' />
        </aliases>
      </column>
      <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
        <desc>
          <formatted-text>
            <run>Was shipment early, ontime or late based on ship mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
      </column>
      <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
        <aliases>
          <alias key='false' value='Unprofitable' />
          <alias key='true' value='Profitable' />
        </aliases>
        <desc>
          <formatted-text>
            <run>A level of detail expression that calculates profitability for each Order</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Profit per Customer' datatype='real' default-format='C1033%' hidden='true' name='[Calculation_9321103144526191 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/countD([Customer Name])' />
      </column>
      <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([federated.0z0pi331stuxay1ce6y5f1yxvsw9].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
        <desc>
          <formatted-text>
            <run>Used with &quot;Sales Target&quot; data source</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
      <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Row ID]' role='measure' type='quantitative' />
      <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' hidden='true' name='[Sales est (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
      </column>
      <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[diff:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,MONTH(Order Date))' hidden='true' name='[Action (Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (Category,YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Customer Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Segment:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?)' hidden='true' name='[Action (Delayed?)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment) 1' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment)' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Segment)' hidden='true' name='[Action (MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,Category,MONTH(Order Date))' hidden='true' name='[Action (Order Profitable?,Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,MONTH(Order Date),Segment)' hidden='true' name='[Action (Order Profitable?,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State) 1' hidden='true' name='[Action (Postal Code,State) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Postal Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State)' hidden='true' name='[Action (Postal Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Postal Code:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Category,ProductSub-Category,Segment)' hidden='true' name='[Action (Product Category,ProductSub-Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,Region,Segment)' hidden='true' name='[Action (ProductSub-Category,Region,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,State)' hidden='true' name='[Action (ProductSub-Category,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status)' hidden='true' name='[Action (Ship Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)' hidden='true' name='[Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Order Date]' />
          <groupfilter function='level-members' level='[Order ID]' />
          <groupfilter function='level-members' level='[Product Name]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Transaction Profit,MONTH(Order Date),Segment)' hidden='true' name='[Action (Transaction Profit,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Product Category)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Segment)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Region]</field>
          <field>[Country/Region]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
        <drill-path name='Product'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <folder name='Customer' role='dimensions'>
        <folder-item name='[Customer ID]' type='field' />
        <folder-item name='[Customer Name]' type='field' />
        <folder-item name='[Segment]' type='field' />
      </folder>
      <folder name='Order' role='dimensions'>
        <folder-item name='[Order Date]' type='field' />
        <folder-item name='[Order ID]' type='field' />
        <folder-item name='[Ship Date]' type='field' />
        <folder-item name='[Ship Mode]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.454327' measure-ordering='alphabetic' measure-percentage='0.34375' parameter-percentage='0.201923' show-aliased-fields='true' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Calculation_9921103144103743]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_9951107165644870:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;Above Target&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Below Target&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6401103171259723:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Shipped Early&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shipped On Time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9060122104947471:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>true</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[diff:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
          <calculation class='tableau' formula='0.59999999999999998' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
        <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
          <calculation class='tableau' formula='0.064000000000000001' />
          <range granularity='0.001' max='0.25' min='0.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0z0pi331stuxay1ce6y5f1yxvsw9'>
        <column datatype='integer' name='[Sales Target]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0z0pi331stuxay1ce6y5f1yxvsw9'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='dataengine.42019.618651678240' target='federated.0z0pi331stuxay1ce6y5f1yxvsw9'>
      <column-mapping>
        <map key='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[mn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[none:Category:nk]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[none:Category:nk]' />
        <map key='[dataengine.42019.618651678240].[none:Segment:nk]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[none:Segment:nk]' />
        <map key='[dataengine.42019.618651678240].[tmn:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[tmn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[tyr:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[tyr:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[yr:Order Date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='dataengine.42019.618651678240'>
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
        <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='details by product'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Product Name:nk]</rows>
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{085ACB36-25F4-4A3E-A2CB-2C5C4881A25E}' />
    </worksheet>
    <worksheet name='profit by sub category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Sub-Category:nk]' />
              <wedge-size column='[dataengine.42019.618651678240].[pcto:sum:Profit:qk]' />
              <size column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <text column='[dataengine.42019.618651678240].[none:Sub-Category:nk]' />
              <text column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <text column='[dataengine.42019.618651678240].[pcto:sum:Profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#818b91'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#e15759'>&lt;[dataengine.42019.618651678240].[pcto:sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E9EE217B-2509-429C-9307-2C9D75B25871}' />
    </worksheet>
    <worksheet name='sales and profit by date'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[dataengine.42019.618651678240].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[dataengine.42019.618651678240].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[sum:Sales:qk] + [dataengine.42019.618651678240].[sum:Profit:qk])</rows>
        <cols>[dataengine.42019.618651678240].[none:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{220CA391-2696-4F0B-ADE9-508878A4D022}' />
    </worksheet>
    <worksheet name='sales bystate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column aggregation='None' datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[Longitude (generated)]' field-type='quantitative' max='-8597343.0046788752' min='-15307192.103937916' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[Latitude (generated)]' field-type='quantitative' max='7252946.6543948567' min='3380619.257006417' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[dataengine.42019.618651678240].[none:Country/Region:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:State:nk]' />
              <color column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <geometry column='[dataengine.42019.618651678240].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[Latitude (generated)]</rows>
        <cols>[dataengine.42019.618651678240].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4037ADE4-E68D-4876-9AF5-B3E51739AA0C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='dash board'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' type='layout-basic' w='76800' x='800' y='1000'>
              <zone h='40375' id='3' type='empty' w='2984' x='74616' y='58625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='57625' id='5' param='vert' type='layout-flow' w='76800' x='800' y='1000'>
                <zone h='57625' id='6' name='sales bystate' w='76800' x='800' y='1000'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='40375' id='11' param='horz' type='layout-flow' w='73816' x='800' y='58625'>
                <zone fixed-size='400' h='40375' id='12' is-fixed='true' name='sales and profit by date' w='40800' x='800' y='58625'>
                  <layout-cache minwidth='284' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40375' id='14' name='profit by sub category' w='33016' x='41600' y='58625'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='216' h='98000' id='8' is-fixed='true' param='vert' type='layout-flow' w='21600' x='77600' y='1000'>
              <zone h='8125' id='10' name='sales bystate' pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='color' w='21600' x='77600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='20' mode='dropdown' name='sales bystate' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' values='database' w='21600' x='77600' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='13' name='sales and profit by date' pane-specification-id='1' param='[dataengine.42019.618651678240].[:Measure Names]' type='color' w='21600' x='77600' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='266' h='34250' id='15' is-fixed='true' name='profit by sub category' pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Sub-Category:nk]' type='color' w='21600' x='77600' y='23875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5750' id='16' name='profit by sub category' pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Profit:qk]' type='size' w='21600' x='77600' y='58125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35125' id='17' name='details by product' w='21600' x='77600' y='63875'>
                <layout-cache cell-count-w='3' fixed-size-h='30284' non-cell-size-w='98' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='20' mode='dropdown' name='sales bystate' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' values='database' w='21600' x='77600' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57625' id='6' is-fixed='true' name='sales bystate' w='76800' x='800' y='1000'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='sales bystate' pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='color' w='21600' x='77600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40375' id='12' is-fixed='true' name='sales and profit by date' w='40800' x='800' y='58625'>
                  <layout-cache minwidth='284' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='13' name='sales and profit by date' pane-specification-id='1' param='[dataengine.42019.618651678240].[:Measure Names]' type='color' w='21600' x='77600' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40375' id='14' is-fixed='true' name='profit by sub category' w='33016' x='41600' y='58625'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='34250' id='15' name='profit by sub category' pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Sub-Category:nk]' type='color' w='21600' x='77600' y='23875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='16' name='profit by sub category' pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Profit:qk]' type='size' w='21600' x='77600' y='58125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='35125' id='17' is-fixed='true' name='details by product' w='21600' x='77600' y='63875'>
                  <layout-cache cell-count-w='3' fixed-size-h='30284' non-cell-size-w='98' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4DE104B8-519B-4818-9745-7823369CB130}' />
    </dashboard>
  </dashboards>
  <windows source-height='69'>
    <window class='worksheet' name='sales bystate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8CD1C5A7-97E1-49C0-8CF6-F86DBDA4B465}' />
    </window>
    <window class='worksheet' name='sales and profit by date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[dataengine.42019.618651678240].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[dataengine.42019.618651678240].[none:Order Date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A06D9A9-332B-4BDA-AA3C-BB7FB638653D}' />
    </window>
    <window class='worksheet' name='profit by sub category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Sub-Category:nk]' type='color' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FCE1C16-C145-43BC-9442-AF9F6F1CAAC5}' />
    </window>
    <window class='worksheet' name='details by product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A5EFA34-DF47-4F71-B3D2-E4311191224D}' />
    </window>
    <window class='dashboard' maximized='true' name='dash board'>
      <viewpoints>
        <viewpoint name='details by product'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='profit by sub category'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[none:Sub-Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='sales and profit by date'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sales bystate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{291FA336-8F9B-495F-A681-81CCFEF44058}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='dash board' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='details by product' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V5BcZ5qm96TPqsysrMzy3qMMUPAoeEcDuu5hL9nT43pW2pkrbWgkXYwU
      uzfShBSKUGxoJ2RWO6vZnu3W9rRhg2g2DEEAhEd5731lucysSu/9MbooEE2wgWZzCiTBRj4R
      iMg4ec75/jo4f/7mM69ClmWZLFleUJRfdwOyZPk6yXaALC802Q6Q5YUm2wGyvNBkO0CW5wCZ
      wOYaExOTeELxJ54hZRIszi+REp+t5WwHyPJcMPLgKt6kzAcXLiE84fvlgdvMuJPYZsZwB5a5
      cWP0mdhVP5O7ZMmyTRQKBTq9HpUSrvz0/yauaaC6QGTJGUSpL0TnHMVjhYwpTqFLyZ07C9Tu
      rGVHRf627GZHgCzPBZIkEPCH+dbbf4BKY+KV118mEQjx8rffRQi5adjRzPGXzpCrlKluaaO9
      vYOmcvO27WZHgCzPBQ27j2Gp3YdZDy279mHUaTh88iT3bn/E4VfeoiDjRjZpMDbvxJpfQ6Vl
      lsWN8LY7gSLrCc7yIvPYCBAMBkmn019XW7Jk+crJjgBZXmiyi+AszxXJZBKn0/mV2XtKBxAZ
      6bzF//kPP350ZG12kPPv/Yz/8X/+NwTTEPUs85/+4w/41aVbxD515eX33iMgbHkrHPPj+BOP
      3/nCv/9b/vP580yt+Z5oOR1YZ3TJBYAsC3z083/gJz//BUuu2BPP/10ZHRwi9fCzZ3mE+w9u
      88G1kW3dM8uzRRRFLly4wOXLlwkEAty+fZt79+4hSRI///nPuXDhAi6Xi8uXL/PBBx8QDoe3
      bfMpu0Aq9p14mYnlHz46Ut1ykPxcBcncWvK1MDjay+5XvsvBunxmJoYorG5ldmYSMRXi44vv
      YypppUJ0Y8nf4M6le1jrd3P2UBuyrKSgqAiTJs3l8z8jIubw6isdPLh1H0lvpTbHzfvDYfL+
      xfepydnEKTbwl392hlR4kws/v4ioK+TwzgJ6h5eJpZPkKdPUHz7H8sgDREFi16lzhGYHWPYl
      OH2qg667Dygqr+be9cusRSTeOHsIWZlDebGB+tLqbT/ALM8WvV5PUVEReXl5nDhxgomJCQRB
      QJIkqqurUalUJBIJampq0Ol027b3u0+BZIm7d4Y4e/YQABqVhmQyhSSKBAJeEqk0TpcHVLmc
      ffMc/oVZXE4nC5NTlLaf5NT+ZgDUOhPNbW1oY+uIhXs4VBbno7sjFLWdoErrAksde46cpq7Y
      BCoNYjqOJElsLE2R33aaauUa06tBSps70MkSpw83sbjuIioZOPfqXibu9zO3toFzdYbeO3cp
      P/gap04cpa15J2fPHEQNFNe00Ni8g0qzftsPMMuzQ6lUcvr0adLpNAsLC4+Oq9VqXn31VfR6
      PZOTk1itVgwGA1NTU9u2qfqbv/mbv/mNo2KCezeuMb+8ispcgmt9ndJ8FTMeJYd31gJgLSpm
      rPMm86sBKkr09A9OozGaqciD4eFpinfspkgrUr5zJzO99/CmNNRVFOHb9NKwdzfmXAPzQ/dY
      Duk499IhpvruE5CsHO3YxVRvF+ayeiz5xciBWToHJiiobWV1pBM/JextKkSZY0WRiVFTWUgo
      rcU21oXTlWD/8QN47E7MBVZ2Huhgof8+QUFHuSHB2FKEhvpyVJ/6U5emx5H1KuZnnZSWWrf9
      QLP80xFFkY8++giXy8Xu3bt58OAB8/Pz5ObmMjc3h8Ph4ODBgwSDQVZWVmhvb8doNG7L5u/H
      LlAmTt/EEgf3tz/2cmf55pFOp4lEIhQUFHwl9h7rAJIkfSVGs2R5XnhsEZxOp7OdIMsLRdYP
      kOUbgSAI+P3+Z37fp3SADEP3b/L++fPM2QOPNyQZweH+3RqSSYRw+6JP/X59YgSb54vt5WaS
      Prr7xr7QNVm+2QiCwN27d7ly5QqBQICPP/6YixcvEggEPv/iz+GxXSBBENhaEiiwFJaiijvZ
      TBqoK7cScC6zsLRMIJokmpLwrswwNj4GphLCa5M8GBhHayzEYtIx3nOb0WUfwaUefnFtlLqW
      Gkbv3mI1KGKQ/XT1DOKJK1EE7MSMRfjmBhiz+aipKkOMuLnf1cviuo+KQj03rt8kIGix6jPc
      uXkbQatj2bYBmTjm4hJUim0/gyzPOfF4nMXFRdra2igvL6e8vJxEIoFOp8Ns3l406FNGACVh
      9yq2jTgGZYSr164zPzPJrBsqjQLrLh+T0/N07K7hfs8wXZNrnGnNZ9DmB9JMz9jQa9XUN7Ww
      r+MEpdo07nCCGzdv4Fyex1R/gI3hbsKAGFrkg+ujLA/34ogJZEIOXIoSClKbjM4sEE4kuHXj
      Y7qv36Lx+CtUFxpY6LvJYliBNvvyvxAYjUb27t3L4OAgGxsbOBwOQqEQWq122/d+cgdIRZia
      XyaVjhOXDLz5+msUGvXU1lY9OkWl0qLTqlCqdRB1ca9v4uE3AvkmE12d3SQ1uaxMdLOyusSa
      P4PRoAMxzXDnTQKaPHIBhd5KiVlLaX0jJs1Wc1Ym+xlzhNBEnfjSOox6NUVlFrquX8W2Gabh
      wBHSK1OE0t/8Hdwsn08ymWRwcJBUKkUwGGRhYYFAIEAstr3wGPjMNmgymdzaBZJlJFlGlmWU
      SiUKhYLPugtkWd46LmYY6LyFzeHl4Lnv0lSkRxIlZIUCpUKBLEkolEokSUKhULA80UnMsptd
      VWYUn7qXLINSqSDlmuGeXcur++tRKBSPrnv0WakEGRTI8PB4lt9vZFkmlUrhdrupqqp6+L78
      +t3cDk/uAFmyvCA81gF+H5zCWbJ8ER5zhGWnE1m+LiRJIpFIYDAYvlK7T80HmBm4z6+u3MAf
      20qRlKUU/feuc6dnAgGQpQxjPbe5drufzKeuXJyZISltjSSiKCB9ZlCZ6r3F+d+SDyDLEqIo
      Pfws41mb4VcfXGIz8vmpmrIkIn7W4KcIe9axu8LEgw7mbe7PvV+WL59IJMLU1BSLi4v85Cc/
      IRwOY7PZuHTpEqFQiJGREd5//33sdjsjIyPcvXuXeDzOyMjIM5mxPDkaFBGVvhCL7GBgJUNz
      TTGznddw6ps4vacWlUbDyvBt5hIlvHKwiVg6iUqpIRQJM3DvDhmdHo0mF+dkH1J+JaGNZQJJ
      GbMxl96Puzj7Z39CVZ4et2MFdyhNvkmPY9VGKAnRpfv88PYCzfXV6JQhfvrzu3zne99Gg4zH
      uUIwqUCvEElLChLhMKKQwLnhIhhNs9b/S67OpmmpKcSxvEhC1iInwvhDETT6HHxLo9jCOZil
      Ffpmk1RaZVY3ApjNeaiU2dHv62B6epqqqir6+/tpb2/HarWSTCZpampiZmaGWCzGm2++iUql
      wmazUVVVRSAQIJ1OYzQat50T8JSEGA1xzzg3exc48NpeAJxuD65UlPeWJnnn3e/gdm9S334M
      vcnAyP3rVLUepae3G42UIRkPcvnSHNWaEEGVjhVnlH272wBIRja4fP48e1sbGJtwYJU2Wa3b
      ic+XRBm6T3lVCTzcH5IjG6gLmzDoc/AsDdI5GULlv0t5004M5Q0EhnrJL0uykKontjLBjtKt
      WFDn6A1+8OEoyhwrR4tEhB2neKOwCBAYuHuNpRw/2sqj/PDfXcCTSPHmX/wrjjcXbutBZvni
      yLJMKBTCaDSyc+dO7ty5Q35+PhaLhcnJSdrb23nw4AHvvfceHR0dCILAwMAAVVVVlJeXE41G
      ycvL21YbnjwFSseJq8wcPdDC6soKfn+Q2poaSqubMMohommJ6toGpob6WF5cQZAE1tdXCUWT
      KNVqcnP0KB7+ooqCgEaXS65uy2mhN5Xx7T/8QxqKclCp9eRoFaTTAhp9DloVWIrLMeh1aFRK
      lOYalIFp5hcXcQdiqPW5aFUgK2TcDjuuYASAitodFBjVlJRXodOokYUM7cdf45//4Vvk5po5
      eHAPeo0KUHPozOt869xxdEjkWGv487/4S3aU6gkEIkSDAdJidiPgq0SlUj2a/9fX17O6ukp3
      dzfl5eVkMhnq6upobW3F5/PR0tJCUVERNTU1ZDIZlMrth7I9OR9AErDNz+BPQGtbMy7nBvU1
      5SxMT6EwV9BQVYRCFlm3zeNPaWmoMLGw7KagtAQDCVbsHmp2tKGKB9AXFuNcmCaTU0RLbRke
      h5P8inLUssTa4jQROY+djWUszk4jG0poqi5gfnIKS3ULxWYdUf8ms0tOGnfuxLsyi2gopb44
      l+mZJcwFpVjzFEi6QtJhN/lWC7NT89Q1N7E+P42UW0SpSYOxuBy9ChIRP0k5B4M6SSCmQpX2
      YNsI09RST8iXIEeRwFBWi1GTnQ59VXyS8JJOp5mYmODcuXMsLi4Si8WorKxEkiT8fj9tbW3Y
      bDbUajX19fX09vZy4MCBbU+Bfj8SYrJ8YxEEgY2NDSorKxFFEbX684sVptNpPB4P5eXlz9YR
      lslkso6wLC8Uj3U3URSzHSDLV8onv79flw/qKasImYDbiW1lnZQgsbluY2l5jWRmq96PJKRY
      tS3hDkR4dhMoGd/mOqsOF9Kjm8pEQ37STxJFkGXcjlUWl5aJP/GELM87oijS19eHw+FAkiTc
      bjeCsKUOIMsyTqeT1dVVJEnC5XKxuLhIPB7H5/OxurqKKG7///2pCTHuTS/OxUHuDy1x9epF
      ApuLvH/lLgATtz5iwRfBvu7gSU2I+ZbpHpr7Qg0JLA/xUdcMgWAQ4VM7McP3r+J+omiIzPWr
      VwkGVrl8vffRsdXFGaKfkhGJ+pfp7l/8Qm3J8tWwuLiI0+nE6/USCATo7+8nGt1KoBJFEbfb
      zcrKCktLSwwNDZFMJkmlUiwtLbGyssLa2tq22/CUFYcWo16iy+bh8JuFeGyFHDxylukf/Yg0
      UFxTwmD/HEVHjnP/lz+l4dQphvuXUYZmiVBKU2WG2z12zAaBrlt3iMr5vHygkMHlCBHPJlad
      RNtLbzN+8zLW5g6+8/JhpgbmOfzGd2kyaRm4co36bx1l4MoUulSU+9feR9TkU63wMLHqYs/Z
      73JyVzkqrZ6CAivzy2v843/4D+S17icvuoIU9/CDES8kwhzbYeB2rwtr3hlu37xLXF3Aq+25
      9NvSvPntt6nI335MeZZ/GgUFBYRCIWRZxmq10tTU9GgqpFar0Wq1bGxs0N7eztDQEHa7nbq6
      Otrb2xkbG3smlSOePAIIaUwVzbx5eg/z8zYA0jEPKYUBDaAvauLPvvsq/Xc/puVAOx9fuE7j
      zmbq6huRE24MZTto33+YYryEVIV0tO9AQMnuoy9RXJzPmUONxNJKGpvq8TjsCEBpWS42m5tk
      MkEmlSKVSBJLplHpDJx8+Q3S/mXmV1y07T1IiXnrpc0kIjg8At964yRaYzHnTh5EFDJIkkjt
      rqPUlORS2djM7n1HsaQdxHPK6NjVREZSsv/EK9mX/2tGq9Vy7NgxVlZWfmPtKQgC1dXVHD58
      mKWlJV577TVaW1uZmppibGyMvXv3btsJBk9LiZQyjPV3MbcRp+PQAQSfjcllPydfeglzro6I
      e4W73cPs2HeM2rICJmeWOHHiMH7nMnGM7NnTTmBlCn3VXkwZNzE5h/raCkx5Vgw6FSXFxWhy
      TYQ27OQWV9JUU461og7fwgDzzgiN9VZGJ1epqKim2JrD+NgEe4+fo6XazJrDS2l1HVajHqU2
      h30H9pGjViKjorisCCQJS0ExOqOFAoOasopa3CvjmBoOoY9tkFAaaKwpJ89SRMI+zOCqSG2p
      ibnpcTRKicXNBMWWrzYg60UlGo1y+/ZtamtrUavVDA4O4nQ6iUQiyLLM+Pg4m5ubHDhwgNnZ
      Wex2O7t27WJmZoaFhQXMZjMmk2lbbdh2PsDG0jRJQzl1pdvTavo68Ls2MRSVosvWxvjaiMVi
      6HS6x/b/g8EgeXl5z8TT+3n8hh8g6xfL8iKR9QRneaHJDv5ZniuSySQbGxtfmb2n5AOk6Lp2
      jbv37xDVlPLRP/5b5haWWQ0paa4pZXngNr+6N4DTE6W+ppLPhtInwy4W1oMUWX/3VXoqsMqP
      fvw+K+4wdbXVqFUKQKbzw5+hKmsn77MxT7LED//dv2FmcZ6VoJbmmmJAZnl+Go2xAK16q28n
      I5ssroYpLNjeYinLl88nAhnj4+M0NDTQ09PD+vo6FRUVfPjhh/T391NeXo4kSfz93/89O3fu
      3HZplKf4AXS0tLfhDQfRapTkFNXyZ9//c/7+73+IcGoPsUiYHEsxB/btYvDWNZpPHGFsYAld
      xok9oKGqIMzVzjX+9PvfY3lsgJi6gP21evpmHYgZAXUmyYFX3mCh+xZyYRNvnTnI8M27HH7n
      +7QX6pnp6qP8+C5mu2wko35uf/g+JdUtVGsDTNg2aD92jpaKPHTmCr7z3Vf5+U/vcDO4SMZS
      Rqkqil6V4ZcjdmRJps0a5XLnJn/+L77L3HAfSX0J+yoVjNuCHDp1jkpLdiv0eUGWZTQaDY2N
      jY8JZESjUSorKzl+/DgrKyvEYjHa2tqeyXr1yVMgWUZvzKe2sgSvz/fwkIisUKEAWk+9wcnW
      En51/gKFRTpu/OomynwrqXiMSDRIcW0LB46cwhqbp2fBTczjwxPwU7v3JEI6QkezmXV3jFgi
      SjAYQgLUGgWp1JYSiN+5QUpKs+H0odLmcuq1P2Bl8g43b3WSFjL4AyEAwm4bl650c/rVU9id
      AY527MOzsU4s6EFXuYccwpQ1tnCw4zQG3yiDy0HCPi9e7ybmun1U5Gu2/QCzPDtUKhVnz54l
      FouxuPi4914URURRxOFwMDo6yuDgIDabbds2n5IQE6W76wEzKy5KCgtRJ/289/Pz7Dr6Mipg
      abyfzr5RiqsbqG7ex8bGGrsaKtDm5KDMREFfTNQ+gU9fTaNFS15BPkZTPqYcLcXFJeSYrBhz
      IDcnn0QsigQcePUNFu58wMUbDzAWabh1+S5yjg6jKY/Oq7+geucZ9u/ZgUKpw2zKARTUtXXw
      zrv/jIbSfCqqa8nVqcizFKI3mCnK01NQUIjBVELIOUzU3Ey1SUG+xYIxv4iKIjMR1zwDU3aQ
      JWbGhwl67Iwvurb9ULP80xBFkZs3b2K32zEajVy/fp2BgQE8Hg/BYJDbt29z+vRp/uqv/oo3
      3niDpqambdvc9i7Q6mQfdqGAo3sbv3Erasf8FLrKZgpzPz8GPctXQzqdJhwOU1j41aSoZgUy
      srzQZAUysrzQfNNmLVleUARBeCZ6AJ/lqfkAIw9uceHCL1l0hrj0s79jwRkh4Z7jhz/+iCQQ
      WJtjatlDzL1I18jyM2iKzL179xDjm/zs4m2E8AadowtsOpwkoj780TS+5RFm7L8W1JDFFL13
      PuLShzfwx4Rn0IYszyOCIHD//n2uXLlCOBzmzp07XLlyhVAotO17P1Uou+XgcXLG77Li8OAN
      hnGs2kinN8lkoghAIuxjM6mmRPJi39QyO7SOLQCnTu5jpncET0Li5NljrI33YA+k2H/kFLaR
      +1DQRFM+bAQjaHNNLM9MUtV+lNbqQmKOdZYKDcQDfhbtKwhyCXb7GnO9g/T4inm1Wce0ZwNX
      VRUnO9rx2cbYFEv49uu7EZNRbl/vpqhpP8VygKlVO3pDHuFgjI6Du5iamiIpqNFIUSrajqEJ
      zjG5GuL46bNYsovg55pkMkk8HufQoS2NaqVSSVNTE4FA4MsTyAg45plaCZGfp0efV4AY8eEQ
      1JQ+8sgKTPQ/4PaDQTJyBo8nyPr4IGOrS0wvRKlShxgdH2bapaNCuUlPTxc9U3ZG7t1mbm6M
      GQ+oo3ZCGQ0qttYdNdUmeuf8HNtloW/CS0VZATbbKvVNjRw8fpaSPB1lDTtJOcbwJyAVT2Aw
      56NSqRnpuU/Zrg6W+24wPjhEcVMbc6teqvNijE7OsJ7OQw4s0bivlb5bA3jdfgJrMzx4JqNX
      li8To9HInj176Onpwe12k0qlmJ2d/RKV4lMRFtc2UatEQuE4KHVY1JsklKWfOknN3qNnOXem
      A40QY3bBgcWSj0IGrU6HWq1CozcRss8wvuDAaCnElKNjR/su9AoNDQ01GM0FCGEHXUOTAJRU
      VOFYXqO4thb77AKF5q24/FyzldnBTrzRNDq9/lEZw5L6FrxzXXx04xZKvZHRnvuEFXno1Uq0
      Wg1anR6NRoOMjFarRa3WoNHrUUkp5udXybNaUJJianIBz5oNVzix7Qea5dmTTCYZGxtDlmVi
      sRjRaBRRFInHn5gr+4V4qkBGOp1ClEGn1SFKAiqFAgklSBIqjRpZEpFlBUqFjCiBLGaQUKLW
      qJBFUCplhEyc21ev4gzKvPPnf0yulEJCiUatBIUKhSySSmdQa7cqwcmSREYQ0WhUZNICGq0G
      URRRqZSkUmnUajUKpRJZElGpNCgUMmImQ1qU0Wk1pNNpVGoNSiQUSjWiJKFSyMhbchooZAmF
      SoUkSMiyiCSDSq1GEiVUSkCpQvUVxKBn+WLIskw0GsXtdlNfX/+ofI9Op8sKZGTJsh1+QyAj
      mx6Q5UUimxCT5blFEAREUXwmi92n8VSBjNnBB1y8epNgQqD//jVc4TRC1MXN2wNbghiywNTA
      Pa7d6SUtQcJv5+adfgKeZT7u/nwha+/KJP3Tq0/+UpZYGOvh8vVOfG4Hzt8itp3l9xNZlhka
      GuLChQuPyqJfuHABt9tNT08PFy5ceCbK8U/pABKFtbvZWw73+mcZHLjP9PQiq+NDDE8ukAIc
      U91MBgzsLE5z+UYPl//xPIaKUs7/4iLlFRYe3OskmU6xvmIjEEng3VjD4fI/nGLJdD3oY2y4
      j4Qg8qCrk1gwiM/vIZ4S8S7107Mq8eqR3XjWFlh0Bgh5N1h1uBDENOvLNja8QVLxMA77Gg53
      ADEdZ2V5mXAiTSDgx+d2IWSXM99YEokEa2tr7N27l0wmQyKR4J133qGwsJBUKsW7776L1Wrd
      tp2nCmQkvYvc6Jnn4Ot7CC6VkQx5WFJAXd5Wn/H6fNQ17KK4KE145BaKpICQjhPNpJHSSTZX
      NhhPf4RbU0JL3MuPfnyZRFrHv/rf/jVFBPBTQLU+jNMXY2V1BXl1no3SHbxx9DBu+zJ1rW+i
      N+ehB0h7+Lv/4wNCKZk/+pd/ydDFC4wGNfzVuSYGg0YCqzaay2W6RtcxNxzC6B9m54l3OVBY
      su0HlOXrQa/XU1ZWRm9vL6Wlpfj9fs6fP8+xY8fweDycP3+es2fPbjtq9MkdIB0nrS/k1OE2
      pm2rKDQG8lnHKbWgYisUoay8ghsTo+iKkxTX7EOdkWja1cLK+AAt9RXMdo+RjKew7ijDoN6g
      qPEArx1pxaBSsDk5iifkQw76SCzYHxrNoePoYfJyNJTXtdDf10utupUEgJQmp6iR75w7jNK/
      iLK2g/LVSVCoqW5sReldI5ZOc+atd6gsLqTz7iZH9reSrfL/zUUQBPR6PeXl5aytrdHW1kYy
      mcRut7Nnzx5CoRAej2fbHeApAhkZFqYn8MSgfc9ugl4n+XolMaUFORakqKoCtSyyMj+FJ6Fh
      7+5WAnY7edWVeOx2KipK2bS7KSw2MzEySlH9LtLuBTwJHQcO7CLu2USZX4SRBHZ/CqWYJAcF
      OWVl5KqUIEs4bLOsBSR2NpaSURpIuJdY9aTY1d7AwtQ8GnMBDSUm0hoziYAHqyWX8fFprFXN
      6BUJqiqrt/Vgsny9SJLE4OAgfr//kWhGJBJhz549LC4ukkwm2bVr1++kJ/DbyO4CZXlukSQJ
      SZK2/ZL/NrICGVleaLICGVleaJ4qkBHyuVl3bJIWJHxuJ4mMhCQk2dj0bcVuyhJBnwuny8uX
      IqwoS/jdG2y4/YjZWdoLhyzLj8SxP1GRjES2VEFDoRBut/tLLItCBsfqOovjnTwYsfGz//S3
      DE/b8c508//+6DJxIOiY5fLH3UwP3qV7/CkOrSchJJmZXXqisManCdonudE1ysryAtGAg1sP
      Zj71bZrpyfnf3WaWbxypVIqenh6cTieJRIK5uTlGRkZIpVI8ePCAoaEhXK7tV/B4qkCG2aii
      byhAR3sBGyW1xAIO5oQMOyu3QpTtq0u0HDrN7qI0528M4Bi5SEH1QbTpTTZCKURTNfsLk9zr
      n2L3S99hvucyeSoo2v86bvsaUszB9Rv3OPH295jpvEdYzOW1Y5XcGNrgjTe/RbnRQjo4RLqi
      Ct/aFLdvzVKVH+XDzkmOnTqAc8ZFYnOY2YAWUZ1Ha16IabfE2Vfforowd9sPJsvXi1qtRq/X
      k8lk0Ol07N27l/7+fiKRCI2NjVgsFgKBAKWlpZ9/s9/Ck0cAMUNeZQuvn2pnYd6GUm/CkNkk
      RB66h5vreUYTbpebsH8Dg6mYjNLEyy8dYsMb51uvnEQhppheWKLEomHDE0RtKubcyd14A1FS
      qTQWs4GmjjfYaQqxHNHQ1liDKIrsOHCChlITSl0+73zvT0is9BI3lNPadoCmcjP5Va0c3llD
      MplGREnHqXOooi5MxVUYlAk2/dmwid8HFAoF+/bto6CggPn5X4/2Op2OQCBAKBR6JjFCTx4B
      ZIHpgU42wxkOHD2FZ02mLE+BT1UN+TlogIq2Dpyd9+md0XDmzCmWZ1QoUbOvtYoPr90kbapj
      Z10drqhEaWUhabOExpxHAzoyFh1rK9PEQwpc6pOc3blBRJTJL6pGrd5KcRMzMbof9KMobqex
      tgnP/HUW/UW0N1YAWppb60i7+rh/8xr7Dp9Gm3ai0Zkpzs+KW/w+IMsyExMTBINB9u7dy82b
      N/F4PFitVrRaLXa7nRMnTmzbzjPPB7DPjzKx4ufQ0eMUmr68KD4Aj8OGzlpDXo7qS7WT5esh
      k8mQTqcxGL68H7WsHyDLC03WE5zlhSabAJvluSKVSrG5ufmV2fvtAhkP7hHXlXHpB/8TFO/H
      GB7jf/1/PubwqX34Z7r4jz+7ztTEJDWte8jVbG0P2bovsKxsoizvM/PydJSJBQfFhRYUgJCO
      MLfopKjQ8sSGCXE/166+x09+epPc0koqij5b/0Xm7gcXMNa3sVXWJ8GF96/S1rTWBBEAACAA
      SURBVNayzUeS5etCkiR++ctfMjY2Rn19Pbdu3aKvrw+TycS9e/cYGRkhPz+fq1evMj8/T2lp
      KTk5Oduy+VSBjLa9uwnFIygVMvr8UoKbS8ykgtSX5yIDYkam/dgrmN33mZ2bY3NhHGNJI9Vi
      nHQ6SefNGziCEqePtDI4Pk9VZTWBJIx136B3ZI6Tb71NJBzjzs0rpCIxjI0dGEOzLGwEqGg7
      xbGdlbz21ssEQgt0tJbRee0ijoSWl0/s5M7NHiraDpBKxFme6sdXsoPmCi3x+FZZk6Bjnltd
      I5Q0H0KzOY09FkGpzSeZSHF8Vymd0x60uXm8fe4UGlU2aPp5QZIkVCoVLS0tmM1m3nzzTaan
      pxFFkdzcXAoKCkilUiiVSnbt2rXtoljwWwQyNLocigutBEMBNAYzqrgXn6zD/OiKDIP3ruPR
      7SDjmmPXiXNIG6N445BOhFl1bOKc7cbm8OEVjbTXWlhxuGlobMBcuoOKPIl1h4tlh4dTxw+y
      sjbP6LyP1w81seYNP96eZID5NR+LE6O4giFCkSihaJxEeIMPH8xQU/K4FJN9aZF4Mkrv8CQu
      h49DB5uJ6Uop0UXYWF+moOU4+ogTXzKz7QeY5dnxiUCG3+9ncXGRsbExzGYzpaWl6HQ6DAYD
      yWSSo0eP4vV6WVhY2LbNpwhkROjq6mJh3YU134LFWkKFRURrqSPPYkYJaPRmzr7+bd58+Sjt
      O+rou3mFsK6G0iILuWoJUVJSXFZJbm4utVUVKFUaLHlGbly8QDwZwhOVMecZsRYUotbqseQV
      UpAT58rtbiR561dZodBgsRhBkhBkKC0rQyUryLMYCHh9FFe38b1TTfRPOwAlcmSTD67eJBBN
      oTOaKSnIJ89agE6XS2G+AVO+FY1KweDdDwmoLRToNQQ3l1ha9zE5Nkry8+IzsnypCILAjRs3
      cDqdaDQahoaG6O3txeVyEQwGWVhYQK1WMzY2xvr6+jNJiXyudoFGO68zvxHj2MuvU2n9csIZ
      ArZ+7Pp22su3N3fM8uWQSqUIh8MUFRV9JfaydYGyvNA8tghOpVJZR1iWF4qsHyDLNwJBEAgG
      g8/8vo/5AQRBeFS3Z3VqgDvdw+RYyvAtjeLwBkkrDZhztbiXJ7h+twdRZ6HYYgRAFCIMDM1S
      WVGKmEnhDUYw5G7NswXfEv3rGSoLjY8MJ4PrjM4HUAUWGXEm0XgX8GuLyddv+Q+8KzM4Iipm
      Z8aorqxESIa4c+M6c/YQqqSPqDoPc85nZE4lgaGeIQqqKh4b2iZ6P+Ze7yhrmyFKdFEmvGrK
      Ldk1wDcFURTp6upicHCQhoYGZmZmGBoaoqysbNsRoU/2Awgh7vQt8yf//LuogO7pOMZcAZNR
      D2KE63cmeOf730NDgtUVF5ZcmbRGZKznAcFInBOHdmDf8KIXQ3QN2dhfr2PVU0qVcpMpR5yT
      J46g0uhZXBokblQRVkeYDPjYU7WDBx93oytrpTi9iUdjYnl1leNHjjA7cBtd7VFONVqZ6LmJ
      Jq+GyNIAXoo4vreJycFOEjmluJbXKK+1IOVWU5G/JYK94Y9w8qVX6b76S4LFtawnTRh806xH
      lJw8dZRsLN3zzSfZYIcOHUIURQKBAK+//vq2K0PD06ZAyTjBiI+L7/2Y630znDxzhn0dxzDr
      VCCkEDUmcjQqtNoUE6PLeFeW2AjGMRRV0Zzr4sbQCmtOJ1ev3eXEmeMYdSrkuItfXLqNY3aE
      kcVNNPo8cjJRwqgpkDL40ZAjxPAFY3x08RKfrdQfi0QoKLCi0WpRAoJnnBGvGYN7lJud97BL
      5extqiTsXeAXt6YoM39qdEgG+Pj6NcTcQtRIIKZx+/wsjd1jxLb98npZvlwMBgPt7e10dnay
      traG3W7n/fffZ2lpadv3fnIHyC2kpaoQY14eaqUCheKTf4DOQr01wdXrN5my+fA5phmZWUYE
      Yl47/bNuKgtyAQWWXCVdXf2EUwIKdQ5F1nyqduykptiEQqWlQO8nJBRgVvvwZqwkvOu4kios
      xhw+uxfVuGsvQzcvcadzkAygzLGS2phhzpWirLgQ3/IEE4t28grqaMlPM73mwrbu3LqPQoXJ
      ZCYW9pEWZKRUlLlVFyXFVuR0lFmbHfvqEpFkVmfseSSVSjEzM4NarUan01FUVITJZHom935q
      PoCYSRFLpMk1GFF/JlxAlgQikRi6HANiOoGsUKHT60jFY4gKNcZcHRlBQq2QiMbTGAw6RFmF
      QkyRSAvkGoxoVEoyqQSiQoNGIZKWlOg1SqLROEq1Gp1WjYwSURTQ63TIskwyEUOQVeRoVaBU
      k0lu2TPk6EnEo8hKDWqFAo1GiX1xAp+ijL07ysgk48RTGTRaPTlaJRlJiZSOI6FEq9WSESVU
      SKi1v1afyfL8IMsywWAQl8tFc3MzmUyGVCqFwWBAuU1Bk6xARpYXmqwjLMsLzXMVCpEly6cR
      RRFRFNFqtV+ajacWxlqbHeZW5yCph1WvUhEvt69fZWhmDRlYmepmyZ3APjvK7JoXAPfKFJcu
      XWZ61f3MG7o6Ncily1dYdHwBtfBMhMVlFyBvVRYQEwyOTCFnEiys2H9joZ3l+UGWZUZGRrh4
      8SKRSIRr165x6dIl1tfXWVhYoK+v75lM15/YAYTgGtdHXdQZo9wb2CpJIcoq9nUcZb77Kr6E
      zMyCm1JTjJtdD5gZWwFgaXGW2vbDzN15nxm7g+7+GeKRAHa7g6QgEPR5cTo38HrceAJhhHQC
      p8NONJ7gH37wd6w4PGRScRwOB4l0hnAojN8fRAYWx6fYdfwkH3/4AYKYZtPpIBRLEovFkESR
      aCxBLBTE5XISjCZJJyI4ViZ50LcVMjvZ1YXTtc7HH99n07vGxPw6YZ8bx4YbQcp2heeNRCLB
      8vIyO3bsQKvVcvbsWerq6ojH46ysrKDRaFhbW9u2nSc6wlTGYuqMQ/SNr5POjdHV7WdnexuD
      964R05VhlBykdOVMdXax59gRVhcfXqhQoNHlsLe1nrm1ZdzrEmZhmUs3HtB45ruExwYoKVbh
      z63Hs7HCoVK4N2HHUr2XTCiAy+tj9sH7DMxvUrnnEJHxGY7+s3c5YM1HSEUY7u1BbSxkbuAO
      8wENEbeb3EIjb5w4wkc9Uxjsc+jaarCtqiiWV8kvLUCQCwAFzdV6eqa8nGorYmBmg6LSRkYe
      XOXj7jne+Zf/Awdqn5yZluXrQa/XU1xczPDwMPX19RgMBrxeLzt37kSWZSwWCz6fb9t2njgC
      KNQa9h0+RWO5lcraZlpbmhEScdqPv4QVN713hthxsI14WmSyt4ephVmSAiBJREN+RufWaags
      BCnN9OwmZ186QiIcI8dcws4ddZQ3tGI1qIjGBU698S5vnO2gqqycysoSYkmZV//ge5w5sIP8
      8iYO7apHCag0ueSpBQzmQmKxOOU1DWjFJFImjdvrIZ5Mo1Tl0L5/LzpZIpyS2dFQheqht7Cm
      eQfTw2M0HNrN+L1+yip0LKxLnNhTTzKZJp5Ikk7GyXwphU6zfFEEQcBsNlNZWcna2ho2m436
      +nqMRiOrq6ssLy8/k3IpT1kEi8yNDBIgj4N7WlErIebfYGhsGktFA0vT43z7D76NSqkgkwrh
      9olUlFvx2ecZnlmjfud+Gop1rDjjaNKbOMICJSWVkE5RmK8hqswjHnRRmp/L4PAkxQ27KNPF
      mVyP0d5gZXh0hoodbWjSIjV1FQC41lbIq6jFY5vBXFbJ7OgQhfV7KFQGmVz2UlpdQ246gaW6
      hE17EJMqwsyah5KKJppqipCEOBPjy7Tta2ZmaJLmA3tYGesjLOqpbajD5/Jh0aVQF7dQkJv1
      BXzdSJJEb28vfr+fN998E6/XS0FBASqViuXlZUKhELt37362foDfqWGpIBPLIXY31/AMQjGy
      ZHkqn5Tr12g0n3/yP5HfKIyV3RXN8iKRFcjI8o1AFEUSiQRGo/HzT/4CPNUP4Flf4G7vCCAx
      O9zJxcvXcIeTAIRdNi5fvMTMqufRFZIQY3xi7ncyGnPbmHcEQBaZHe7i8ocf4wqFGB2dfPpF
      skQsnni0d993+yK/+tVlFhz+z9nPl4lFoyS8q0yuZSM/v4lIksTAwACXLl0iHo8zNDTEtWvX
      iEa3Xwn8qR1AIJd12yQgYipuZH+Viv6ZdZBiXP6wk1OvvU5tcR5O2zQjU4ukhThz8zbiQRf9
      A8OE4hns9jVWl22E/S76+ocJJTJ4HUv0PLjD0mYEMn7uDTp45exR9GqBkb4eBofGiKczrM5P
      MDa3QjoRwrG2wsxIP//X3/2AubUtJ9uSK8y3XjlIX2c//s0V+ocnSaQSLM5MMDA4TkoUWJoZ
      Y9pmZ2luiqjPybwjyPriJMPjc2SyA903hng8jt/vZ9++fSgUCiorK2lqavoyBTKUlFVVsBUE
      qkaV3ODOXJy3vlUDmRCCtgCTTgPhFW6NbNBsCjGibAUEbly/TfveVq7d6SG82s+JN/6Url/8
      Z7wJGVs4irjmYH9zIWsKQFPAK0drOP/e+xx4+WVQqFEE5ugZTOBzp6hQDNMTamZqcp0/fO0g
      BYXFFFu3wmBTfjsXr96hoLKJ9370I5IoCGS+jWtuiQajn3vpNImYyJF9OQyN2ihsrQMhxI0b
      fbQdPokoyWiykZ/fCAwGA3V1dfT09FBQUEAmk3m0C7RdnjwCSBlsczNsbrpYc67wk5/doKWl
      jmQqDToLpTkhegZHWN4MI6ejBGNptGoVoECrAq8vgEarQ2cpp7WuDJO5gI4zr3F0Zy2ymMIf
      iiLLQCqCJ6GgttzEptuP3mim2GpEVqgQk2FCCRGdRklDcxtFRYXkKtKEolvTMJ21kne/96e8
      cXwPlqJyzrz+Nq2VZgx5FoosuaDUkIoFCUbiv/67ZB179jXTf+8a3nh2CPimkEql8Pv9mM1m
      Njc36e3tRa1WE4vFtn3vJ4dDSwJOu514WsCUbyEVDpGWJCzFFRTk5SBlEqzZNzEXlaFI+Aln
      1FSUWIlE4+RqwOEOUFJeSSoexpJvIR0PYd/0YSkuR5EMEI4L5BeWkJejwrO5QSyjpKKihFg4
      Sq5eQUaRQzLoIk4OZdZcEhkFJoOOoGeTtMpIsdVEIBjAkr/lvY0Fvbj8UYrLShDTAnqVgKjN
      I+ZzklEbMWohR6clLihJhjyk0FFRXkK2KuI3A0mSWF9fZ2Njg/379+N0OhEEgdLS0m0virP5
      AFm+EXzymj6LPOBP81gHkCQp6wfI8kKRzQfI8tzyyQ+ySvXlle14aiBFMupnYcUBgMe+yMDw
      BInMw+qxssiabYFwYqu68tLUCGt2OwP9A7hDW4tOn9NGT28fdk/oGTdZZmN5hp7ePjYD8c8/
      /SGSEGdzcyuXwO6wI8sp5udXQEzi2Nh+VGGWZ4ssy8zOznLr1q1HpVAGBwdJJBJIkoTNZkMQ
      tl/E4CkdQGR5cZWbd24AadadAVShRW4PLwNb1R96uu8yvxlDltIsLW/g97rJN6m4fOUekgwj
      vb0oTXncvnQee8DD+NgSopAhmUwhSTKZdJpkKkU6nSKdEZAlkWQyiSiKXDz/PsF0BkkSSSZT
      iJKMIGQehmpIjPQ9IMdSwOVfXiQjS6SSSQRRQhQEZGQEQUQUthKnBVFCEgUioVXu358GoO/j
      j/G5FvnFhVtsbszzYGr7ceVZni3JZJLJyUlycnJIJBJ0dnZSWFgIgNPp5MaNGyQSny2e88V5
      ih9ARevefQxMjAJamhsr+PDqNHtPG5mZXaC2vp7W2hLSQDLkQjIWs3tnC/evfUhN856tIDml
      hrKqOnKdcyw7V7FPxhD941y+N8yxb/0Jc3evkKPVoiurxu1PsLdMoGtsheqdHayOj5BT0YTk
      6GdwxkHr6Xdw9r3HrhN/yMkj7ciiQDgYRKXVMdt9g1F7GEnOpUYh0vZHZ+j5YBh1ZIpkURGh
      iJUihYOEFpI0AVBdnkN/v4MTx8oYGF6noa1j2w8yy7NFq9ViMplYW1ujsbGRYDDI8PAwHR0d
      2Gw22tvbn4md3yGWNMEHv7jCsbe+S2NpHiql8rEoUOfCNOVNbdy/ch7djuO8fGAHn3wti2kW
      nF5KrUYgwcxSkOMHWggHo+QV19Cxq5mWg8cpzgWb3c3ZN7/D4f17aK5vpOPwLuwOL+fefpfd
      dSUYi+s4c2wvaiWAgs35EYxVLWy4Apx8+RV0aT9pMUMyGiOWEVDr8zjx6lk0kSABwcArZzr4
      JKawrKKasWU7TbW1TE8vUl74bGrMZHl2SJJEU1MTlZWVrK+vU1lZybFjx+jv72d9fZ3Ozk5s
      Ntu27TxZI0xMcO/GNZICREUlcirO8tICkrGctsYq/KtTDM1tEPB6cfjinDqym4DbzprNxmZY
      oq6yBA0J+vtGaD36Ck3lVnS6PMoLlQTJo7WxnpJCC6VlpRjzrVhMBjoO7GF6chpzSTW76vIZ
      ntzgpZP7mJiYpaC8hopiK8VFxYACbY6BfcfPoY2s07x3HyNdXezoOEtzrYmhUdvWg6sowlJY
      jMGQz44KHYOzLlpbmikqMKE3GFCrtexobEKjUdJYV8302ARKMcRGQo/V+OUlYWf53RkeHsbj
      8fDyyy+jUqkYHx/nlVde4cCBA9TX11NTU7PtBfL2doHSfnonfBw50LStRmTJ8iQEQUAQBPR6
      /Zdm47EO8Ovq0FmyvBg8tggWBCHrCc7yQvHURbAsS4ii9PCzjCiKj0YHSRIfDk9bx/ybDoKx
      1FYHetIIIsvIkoQoSY8+f9LRZFlGfDjUSbL80Pnx9AbLD21/0rYnt11GEsVH7cvyzSEej7O+
      vr71f/jwPfnk8yczlE+mRs/ix/op26AiE71d3J9Z47/+i++TCKzxv//bH/LH/91fs6PIiMs2
      xeDUPH2TDv71X/9XTIyPE4uFiWQkMNXxvdePPLZTJMsS3R/9lDmpnv/ytX303nyfWXknf/HW
      AWRJ4N//7f9CTUMTGVMb2vA8Z/7gTzA9ZR06ev3/YyBYRNrt5r/4b/+SJ+3fiLFNfvzzj7CW
      1/LKq6cxaLICAN8ERFHk0qVLpFIp3n77bcbHxwE4evQo9+7dIxgM0tTUxMbGBg6Hg+PHj9PS
      sj1h9Kf6AXYfPcXkyo8BGO4fZc+hPY++LWvczTGVSDqnBo0QIakyU5SXJu5PodCoAInB+3fQ
      5uagLGplV42Fg0dOYB/aRKnN5djhDpYGf+3EUChVKBRq8q0m4mGIOSaZp5Koc4pd1VbuD0yj
      L6rjjZP7UbClJ5ubn48QdHL1bh/JnCIaTUkWfSmOnz5HdPQODWf/mFMNufjWJrncPYm+sJYG
      Y5g5Z4hYTESZTnP4XAeDH48g65S8+d0/wrI9sZEsz4CcnBzMZjMmk4mjR48yOTmJWq3mpZde
      YmxsjJKSEtrb2+nv76e+vn7b9j7XDyCEVuidWMU2M8nM5DgfXr1JMJ5hcGCcQx178K3NYq1p
      Yc0d4tSZoyS8LmSUNNcV8MHdGRoq8j+3EZaKes6cPoxzcasKnZCKEoylcHu9zA53shkWyGS2
      wi4UKg37j56mTBFiZmmZzXCc8elpIoEgOw6eoCRPQ47RRMgfQBQElqamOHDuHVKbNtyxBHuP
      n0Sr0rGvJg+3P0peWQsHKmHRvX2vYpbtoVQqOXHiBGq1+jERbFmWGR4epra2lpKSEvx+PwaD
      4ZnUDH3yCCAm6Lxzl2AgzIhTyV//9/8Nc6P9GOvaqTDngBiF/Hqq8rXc7fZz6DUreeE6uu73
      U9O8GwUiS844f/bWPhbXfOys0XH3Vg/+cIrxuWJcU4OEfbDgqKWx1IROiHDz7iANOw+iDtsx
      WEtw3e5GaTTSsvsE9t4J8h4KIhitJXT33EBrKKM134jTmE9bQTHWsjwsxq2f8LK9r5D74TUu
      38jncPteum9fJL+2jYq8FAadnoqKMvLyFUh6Bf1j3aRbmzhtCDFjC6BNuChu3IcpOxp85UiS
      RHd3N16vlz179nDz5k08Hg9arZbl5WXsdjv79+8nFotte+rzCdvLB0j7+Oj+Em+88s0MJUhG
      3aw4RVp2lH3dTcnykEwmQzQaxWL5akpVPtYB0ul0dhs0ywvF/9/emT23eaV3+sFGrAQI7vsu
      UqREa7WsxbIl23K8TJxWT/cknZrpTCVXU1M1F3Mx8ydMzU0qNVWpqUknnZ50p9vdHVuWF62k
      RIkSd4oUd2wECZBYCIDY92+ZC9nqdkZqO6Fkq0t4rljAh/MefqiD75x3+5XqAUo815SEsks8
      UxQKBcLh8Ddm79HJcBQYvXqJOxNTyKYGKrV5fvTXf0tt7wAWvYb1udt8enMCoayChmrz17NU
      zGDfCKLIR8mrytFpvrz2rl/8Ea4dC53VBf76L39My9GXKH/EEd1lt2OuqiKzPsVf/3IIp81B
      y55e9F+MJ+Zwe0JYK74cIRALWX76t/8Lu93JjlyJmNrGZLGWRPGeISRJ4tKlS0xPT9Pd3c3M
      zAzBYJC6ujquX7/O7OwsZrOZ27dvY7PZaG5u3rUn6NFeIFnN4VffpG7pNsveIAqvB02FlUxR
      BCHG4NQWf/bnf4xSITJx4zOCBRNnju/h9vAMgtbMuVcOMHrjBorqPZzsq+bmrXHaeveRyOaZ
      uPBzdhrOcKbTTOuhI2ys2Dh4cIBQVot2e4UtRw2qMgWZdJzBG8PI5lb6atUUTTUkE2lSsR06
      ATEbo/XwG5w1rXJ5fJWDxjA2X4r9e6z8zT8M8oP/+EPUOy7WdgTOvnkOkywiait46VA7E2th
      jHU5LDoYn3dRVJt579zJ0uPwW+aL9odHjx7FZDJx8OBBVlZWyOfzqNVq+vr68Hg8WCwWTCYT
      Ho+Hvr6+Xdl89HeuUOCcGWY2qObMgQo+G7MjJwIPSgclEVlZhkqpQCWm8QZiLE+P4t5cJybX
      0ya5mXYGCcWz3Lp2nZHR23Qfe53eWi329RD9B17g9TOvUFOeZ2TwJt6Y9HAqdVqZuVCG1koT
      2USEcCzNzI3raOoa+ODv/g+ainpsDvvDegMUCgwGA7lUii1/kJB7BnfGzAsHjnO4u5rNYJhN
      +ySLGzEAUjtB3IEMBp2I22UnHvBQsO4hu+Xg6xdXlnhaaDQaTp8+zcLCAh6PB41G81CjWpZl
      /H4/tbW1VFVV4fV6n2JJZDbEh1dGEdNhHP4if/bDf0djfR1WixHKrBxsU/Czn/+KqflVPMEY
      FRYLCgU45+8y4RGpVkQIp0Uqyo20NNZz59onLG6EUatUWCwWbg0PU9F+iPXlewzs6wZArVbT
      2lnJpk/AbNKST4QIJwQqLCY2V5foP3GKNbsDlfrBQ0uhVDI/col/vLrM68c68GwFsVRUoNQa
      EaN2phedeP0hKioqUCoAhQKxkGU74CMrKlGr1ShVavQ6LdqyMnY8dtzbSeZmZijJZX87FItF
      bt26RTweR5Ikrly5wsjICC6Xi2g0SjgcplAo4PV6SafTtLe379rmE/MCFaMuhpdEzr3c87Wu
      DzhmmVjL8u6bJ1GXtuElPieXy7Gzs0NjY+M3Yq/kBi3xXPOlQ3A+n0cUxW9rLiVKfON86QxQ
      ehiUeJYoFotPpPXJ7+Ixnj8J9+IUH396lWA8i1TMcuPKVSLpAgApv421cI5MyM3SxtcIWsgS
      o0OfcOGjj9kIf/2OvrnwGjZ/CuQM9+dsFGI+7syskI36cHh/I8adSwZxuILcX1h4YE5+IOrx
      yeVhQttenN5HN75y3l+glAP6bCJJEpOTk1y8eJFCocDCwgKXL18mlUrhcrke/r1bHhMHEFCV
      N3Gsp8jYjI0jtRmWnB6ajxSoMpaRCthY19dhltwsRxpp0mdZD6bo6+0gni5i1ogUUJOMJRAU
      KtoaqvCGcrz3nVd4/9eD/On506w6vbTu6UPMxqgoN5LMQzoWIB5L0djVhxTfYmXmFtHmt+lt
      qGFxcRqj3M2y00e9ZCFq2YtzaY6irop6QxznmkQ4vMiBgQGyvjnGvUr+9NxLRLYWcIWsVKqT
      bEaL7O3pIrLpICro2ZhfxNjVRErQUlOxe8nNEk+OfD5PMBjk8OHDSJJEdXU1lZWV2Gw2IpEI
      586deyKNch8TB9BgVicZnNrk+MEWxpdCvNBVQzEd4rNLg8QzAtO3LnHl1hSFXIrBW+NohADX
      r95hdN7J9voiDs8av3j/EsoyPfBAVunCB5eo7+rm9uAgSg1cuXaL0fFRcjub3HdscH1wEFXW
      z+DELNdvTWExf9H6WkWDToEtnqHPYmRlJ0lDtYH5qXF+8uN/ZCf/ZcdlzL9BQ/deygx6ypRK
      KEa4cvM+YsTJyMg1rkx6KDdoKWS2uXBxEJSlirFnDZ1OR0dHB3fv3iWbzaJQKPD5fDQ1NREK
      hbhw4QJbW1u7tvPoBVCI85N/vMSBIy8gpROYzWrmF5bZ2BZ49503sBjUHH31Hd569UXUKgUK
      WSKby6MqKyO5vYXL4wOgsaOPlpoHqRLmug562upRKkRQKshmcyhUSoRMHLvLTV4Atb6c1sba
      B2J9okA+X3g4pbb2cpxrWXo6y5hfzWEVfPgUTfS1VSP+s7NLbc9hNqdvsDi/QlIQASUKWSBX
      EFCpNchigVy+iEZfTVt1GYHY7oUWSjxZvkiLrqmpYWtri8nJScrLy9FoNNTV1dHW1vZEtkCP
      rgcQ86ytrZMrilTWtVBfVU4qHkVtMKPTqCimo2SV5ejJkBQ0aIoJfJEMHZ2thLzrSGUGKq0W
      clmRqspykGUiO1GsVRWE/NtYLHo8m0EaWjoQEgGiWaiqrqaYz2A16YgXFEjJMImcgLWuBatR
      QzEbJ5gQabBq8YUzNDdY2XC5UWiN1NZayOcUCEKW6qoqkGXiYT+BWIHWpmryohpFfofthEB7
      Wwvx4AYJUYdVp8Fo0RNPi9RYS93hniUkScJutxOLxThy5Ajr6+sUi8WH8YFIJEJbWxtq9WOq
      er8mJYGMEs8ssiwjy/Ku1eB/FyWBjBLPNaVIcIlnji/6AD1NYYwveGwczPYc1gAAFwhJREFU
      ILDh5P7iKtmCSDYZ4f79eaLJBP5ABMQs/kAUkNlwrpDMiUQDGywsO8gLD0T2toNhJFkk6PMj
      SDI7/nV8kSRiMcfK/D3ml50UJRmva4nZ+4skskXyiTD37t1jyeklGgk+GAuZaGCD+cVVskUJ
      SSzgWJpnbSsEYgHb0vyDeX4u/CsJOexL82wEooS2A4iSTCjoIy9IpGNB1rwhZEQCPj+/o7dW
      iW+BXC6Hy+UiGAxy5coV8vk8qVQKv9+PLMusra2xtLREJpPB4XA8kd3KYxaAQCojUAjbuDm5
      xIX3f4WirAxRkBgZusz4zWu4kwJp3xK//OX72HwBLn46Sso3z41pJ4hphq6NIkgFrn5yiYwg
      Mfzph3wyPE0+sc3o/RWyvvvcuLfB9RtD6JQZ3v/VRfyOeyxvFzAb9czcvU44JZKLerlwdQwp
      7efj6+Ms3LzI6o7I3PUPcPi2GZpYQoi5uX53AWSJyesfs5GQEQpZbt28Ql6QuTn4CTupPLNj
      13j/wlWQc1z66DMKpayPZ4qVlRXMZjMzMzOo1WoymQxut5vV1VVkWSaXy5FIJHC73ezs7DyR
      KPFjFkAZOkWamQUPLXUyHn8e28Ii0RyceKGVS/MRjneaGZ508sqLvaAyYNakWHIEqK2pBCCy
      tcKHH1xgLZhAzIfJlHehja6RE6XPWy1KaFQq1Lpy+gaOYSROulDAbVvE6f2NAvhOYIPGzkMc
      PHyEnN/DvfUUZ04f4szRNmZWth60yhOlB94Aqci6L8/xlw7Q1dpIIebnow//iVm7H1nI442U
      sc+SxZMt/fQ/i0SjUSoqKqioqMDr9aJQKBgYGECn06FUKlGpVDidTurr66mqqiIWi+3a5qMX
      gJDH0LiX77x5lFXXNnUNdbz+YitjszaWHFsM1KlYXPcRiYSYnJ5ndX6SbUUjf/jaYdbcD+SG
      qpr6+O6/PU9nnZnA0jhr/ghhr5OlQA4hF2di3sve7joACukQybwGfZmO42ff4eyxfQ+nYrJU
      EfBvkIgEkYwW2i0yjs0YNoePztYaRCHL9Mwy3XvaQKnGrC+yGUySSqUoq2jgO9/9Hod6GshF
      11h1bhBLBBibXt/1jSvxdJBlmY6ODvr6+lhcXHz4erFYpL6+npdffvmJCGN8waMPwWKeybu3
      2IpLnHr1DFLYwdjiFidPHSQYyLK/28x9e4JDAx2EPcsULV0kXFOs+LKcPvMKVXpYXvHQ29/O
      8v1ldGoltX370Se8LG9L6DTQVq1j1ZumGFpiM6HkxVOvYhEjRBRVdNSW45y7zT3HNkdffQvJ
      v8CiJ8GpM2eo0OS5PXQDdW0Ppw+0suQO0dNsYdEZ5NALfQiZCLeH72BuP4hZmaCrZz/O1Tks
      Bh2F8nbaKkXmFzwgFulotrKZ1ZANb3PkyIFH3J4S3yQzMzN0dXVhs9lYWFjg+9//PlNTU4TD
      Yfr6+tjZ2SGdTnPmzBmWl5fZt28fRuPuUlhKXqASzwzZbJbNzU26u7tJp9OPVYEvFAqsra3R
      29u763ygkkBGieeakkBGieeaUieQEr8XFAqFJ5L9+c95TCaRzM//9q/QV7Wz98gJnHcvEc0p
      OHLuO+xrtjAzeJHVHYm+A8c53NsEgJAP89Fn03zvu299pdHI6m1msu28eaiW99//lD/5k+99
      7Qlf+fv/TchciaSo4s+++8bvvDa4ZiNfBveXd/jDN098bRslni1yuRyffvopyWSS8+fPMzc3
      h0ql4vTp07se+zELIEs8JtLc30KzOcesqps/fruKj5bW2VfbyoJfyQ///XdQSjmufvRr4sUy
      Tr12FFmWWZwYYsW7Q8f+42w7RjFaWqkyStjcfroPnyRuG2PTu4HlSDsAsvTgzBFyzTE046Cy
      sYfa4hYbWQHKGum1JFj0RjFYO3jn7GFU6gre+qP3+OznH2KfvcOia4vOg6cIzE+Qk/I09Z8i
      5ppBMNRRp5Iw76lGlmWmb19iM67i1NlXqTE9PdXBEk8HvV6P2WzGbDZz6tQpFj6v/tstj94C
      yVp+8Bd/QbMxzfXxJWQhTy6Xe9CGTqkGIYcgyRRCTnZMvbzUpce+sQPkWXXH+MM3T2NbXSUY
      TnHsxFHGR24iIZNKb+HdNvDGy4c+F7z+DdMLTs69+w5p3zLbwRgHXjlNxudnwR7g7fdOEdvc
      AUAoRrn66XWOvfIGt4eHKcpKssk4qZyaV07uwzU3Q1zfzB+cPU5+J0z283wHhSSTTMTI5Etd
      f37fKCsr4+TJk8iyjN1uf6Jjf6k36EMvkJBjZnIMh3eHvkMvYxY2mHJEOXniRcoNJiq1aYZG
      ppEtLciBJVxhOHx4L/m0SFutmruzNnr2HaJMJdPb1YVOzhNMizS37EWRtOPyJ6hp6aW5Ss/a
      wgz2rR36O5u4MzpJRXMf9SYVFS2tZKNpmqwSk/MrpIoWDr/QQSKS4sQ7b9FiMaIlz3ZSpLmt
      DZUk0dRcRZ5KNAk3ts0YFeUGzPU1yEUVOkWGaDJPY2v3QyGNEr8fFAoFhoeHCQaD7N+/n7Gx
      MVwu18Oo8W54xusBZNyLU9x3Bjh48izttaWileeVYrFIIpGgqqrqiY5bEsgo8VxTigSXeK4p
      xQFK/F5QLBafinDGYwQyikwMXmVkfAqluQbn5E1ujU2jr25hdewKt8bmaezoYmroU8buLdPQ
      2YNeKXL91ghdHe18dvEi7Xv38i+t5/nlj/+KhRUXBW01jVW/2e/HA5vkNUZ0v+U6kmWZO5d/
      wYef3CKl0NPVXPe1bEjpAD/99VUaO7owandXUF3im0EQBAYHB5menqatrY2bN29it9tpbm5G
      o9HsauxHLwAZrPWtVKqirPhlTh47gBBZJyLLbHkKfPdkNb8aXkXSVnCmv5wJZ5E9zWaG79yh
      s72d28Mj9Pa2MHRtCEFfSdq3xNCdWazVJpxrEXTFbVacbnLqCoKuFcpr61Ar4N7iCj/44/N8
      /NGn1FcbUGgtuJ2L3P3ofcY9ccRcFmulFbvNQXVtDe3tTaytp/g3bx1j6d4cts0gcszL0O0p
      rE2NrE5PMDN7H0NVLQujN3AEsoQXrzCyqWag2cjt23fRWOqpLC/FBZ5lMpkMTqeT/v5+dDod
      mUyG2tpaUqkU1dXVuxr7MY2xlHgW7jLhkXjj1ADxbQ/BRBGNUkSp1KI1GMknk2jUZZTp9Yj5
      PADpiO9B+mqqwI1LHxKMJRifvMemz0fct8ToUpiVeyOMzcxjtRqZvHuTeccm9vEhpla9AKg0
      etRyEY/bTjInsOJ007unh1fe+APq5W3uzNxjzZdA9dtJgFKB8ZFx9uztJeAPUIjYuDq6zLIj
      xJGeauZm5lj17KBWQXfvXo6cOsP0jY+JxqOM3XsyAZUSTw+TycSRI0e4d+8e+Xye8vJyHA4H
      hULhqz/8FTxWIOMXF28i52PYHavMLjhIpJJIimrUeTt//+Fdzp57jZxvgQ+vztA30AFARWMX
      586do6lST2tzCyIqOtsaWXOsoS83o1aq6asTWY6ZaGnbgzZoo7rvAAMnXufFvS1Evav84mc/
      pX7vMXRSnsErl4mkRKx1Zu5cu4p13wkcNwbpP3b44VQVn2t8WaqbqDSqWXO5MZgtAJSV6VCr
      1ciUYTWITIyNkRMUKFDQ0tSMpNLR2dzI/MwM0YgHm3v7/78XJb51stksY2NjpNNpBEHA7/eT
      y+WeLYGMfym5HQ8fDM7x3h+9S7n2650WfI573HWm+f7bu88BKfH7RT6fJxQK0dzc/ETHLblB
      SzzXlAQySjzXlAQySjyzCILwbQlkALLE3RtXCMbzbNpnuTx0l3RBYGN5mstDY+SLBe6PD3Nj
      dI6iJCNLIkurqwDMz86SFwoI4m8WlJiNseL+vKAhG2HRHaBYKCD91qJLbnvYCD3o+CuJAsLX
      7Fy1uLz8mH+hyMzIINduTZITHj2WVEhya/AKkZJSxjOFLMtMTU3x8ccfIwjCQ7GMQCDAyMgI
      g4OD5D/3Pu6Gx0aCQo4J5uybGDuCLIyt89qRKm5OzZLw+Djbp+Ofrt5CrypnwLrJuK2JU3vM
      zC4ssW/vXmYmJzEbQa7oxSRsE07mqTWpmJxZQVHM0WktMmtPQ3Sd1v6jxLecpCU9urSLyZAB
      sa+dvHuUye1y/uit00R9bjSWBswakUwug1ZvJrjlpaq5ixqLnumpu2gUShraWsim8tSY1ewU
      tZjii8zFyvneyS5EIYfTvoa6op76chVbwTBoy8m5RliLWzlaiok9U+RyOfx+PwcPHkQQBIrF
      Iu+99x6iKGIwGFhfX2dra4vOzs5d2Xnk1y4Lae4s7nBioAFyMVSmemprrYTXlijXNNDQakFw
      x6jShJhb3UKzpxcwE/WucOHCBTyRHFHfFgXBwNjsIm2WBIHaFykWRTZXJii07wEU+DbWMGhE
      xjwK5KCDgYEGRAluXbvO0X4LZVo9gZVRfnl5HFlRwYkXLGRM3bSq5pj1irxZ2wLokQUJMbXF
      leEwxH301GpRvfA2++v76dFe56Mrm7z77mnGbg0xE4L/8nYfc0krsfUxjnQbMJrMKEtSrc8U
      Wq2W1tZWRkdHqa6uJpFI8MEHH3Dy5Emi0SgOh4PXXntt13YeuQUq5nIYtAXGxmdxBPMoUi6m
      5210tg0g5N2MTy7Qsbeb9p5+DLoyeroelEVaW/o4f/48rVUPIquyLIKsRCFLyEB5VR1NdRUU
      ir85aIuigFKlQZYkUKioa27DrFNTUVuPSiEjo2D/i6/yH37wLmUaEwcPDdDZs59WS4YbI/MA
      qNQqZFlCrTMz0GXl9qbE/uoysvEoluYeapQZbAvTSE1HaK81IitU1DW1YtFpKLdWUNfYgpyJ
      kc7nCId3322sxO754le/oaEBv99Pa2srHR0dbG5uolaraW5uJhgMfvVAX8HvrAdIxSOgtSCn
      t/FGCvR0t5EOb7EVF+ntbMTjsiMZauhsrgVZYjscoa6mhoDPh8mgRVJrufnRT7FvJjj/5/8Z
      s1rCpBYQFWoyRQUaKYOxTOYn//d9dqjgP/3wPWS1ESEdx1ppwe1wUtPSSWRrDVFTQU2FFl25
      FTmzg2vDT0N7D9VmHQGPk1BSpLu7g9nhj8jVHOG1w11IxRxOhwOFoYqOJitOuxuVyUJzpYGC
      ykghFcNk1JDHgDIbQzYaSYTTtLR8vbyiEk8PSZJYXl4mFotx8uRJtra2yGQydHR0sL6+jizL
      dHV1PdsCGbIsk02nkBRqjEY9j9plyJJAKpVBXaZDpy1jN32OZFkmm82g1RlQlfY0v/d84wIZ
      oiiWXKElnitKkeASzyzfxBPgsSOndsLEkwkSyQShcAIhm8S/HaWYSxJLJgiH4l+6PhIO86+J
      IcuyQCi0g1xI4w1EEPMpIomvdsrLsox/w4lj3felWMJvk0vuEEsmicbSgEzEv0EonkUWC6yt
      uSmUFDKeWb4QxLh79y6SJBEKhbDb7QiCwNbWFh6P52kKZMD43bu4FifxxpN88sk1vLYFPrgy
      iHdxioV1G5c/nQRAyCdYsa8zdOnyv0p1XZZEPrt0iZB9hn+4NIJ/ZYxZ985Xfi7mGuWziTU2
      524wsvJlb8Bnlz4GYHFqAtfqDKu+Bwtg8urP+OjmEqnQJj/+0f8llCv+K2Zc4psgl8sxPT1N
      JpMhk8mwvr5OJBJhbGyM1dVV1tbWCAQCu7bzmIowGX25mQprHa2NDTgXZpBNOhSihqKQoK23
      m8krt5ifncTQUIPd5kPKxrGYRH78dz9lfH6Twy/uZ/LiT4mbarh5dQTv0gjj09Ns5zSs3F+l
      xhhnzJano8mKf3keb9FEdzmsR3N0tVfy/t/8iCs3pjHr0vz6k2GUyiK/+tnPGJ5wcPTEIZYG
      r9P95vd4sVPP1Vsr7DjXqG5WcvXiFBPjgwjGBnp6Oqk0V9Pa/qDgZt21RkqAyrI820loadDx
      Dz/6e26MrnL01GF2V1tU4kmiVCpxu90kk0n2799PdXU1gUCA9vb2h2rxBoOBhoaG3dl59MsK
      GhobqW2oR6VQ0FUls7qlYH+1wH0vVFdoqe8Y4PRAC4msgPR5d7dt7xrGpj5OHd4LwIGTJ7lz
      4QPa+vuJFMv47ndexWfboFgokEklEWQZhUJBfZOJje04bU06VjfimIQocUU1b5w9hkJUsP/4
      6zSookjWTl499gIyUN9ixWH3EnCvU9ncSLFYIJdKojLX0723j9dfGqCuvpGqhgZ0Dz1CCtr0
      MO4t0lKjI7W9QdHcztnjJW2AZw1ZlhkYGKC+vp7l5WXu37/PwYMHaWxs5Pz58+zbt4/Kyspd
      23nME+DLGA1l5MqsHOhpIIGJ/rY6oIz6+kqM1hosJiM1VRX0DBwg5XNTLLPQ0dqAUgFLi05e
      PvsqDQaR21MbvPbO6ygTHjZTKjrb2qg069HrNEjKCnq6m5BFA/0vDFCW3yaUVtDT04G5wkpj
      SyvFsIc0ero7m6ls7GLHNoorXc5bpw9B1o8jWKCzvY2uGg0z67FH1Akr2NPXRU4y0NlYSdOe
      /ajimyQkPZWaLOG8grVVB42NpTjAt40kSUxMTLC9vc3x48dZWlrCZrOh1+u5f/8+KpWK/v7+
      XR+Qn6oXKOx1EFVY2dO8u7rNEs8nxWKRYrGIwWB4ajZKAhklnmtKAhklnmueSIQhFNx6KFRd
      osSTIpPJsL39dBsVPLo7tCTgu3+dGysxvIEg2uQ6v740QkbW0tpQxabtHoPDw8yshujf08D4
      3SmaW+v5u//5PxAb9tJcZWRlfIhro/fYDERobmlDswvV+9DidSbDZjpqlPzNX/4lnkCSCnOW
      qyN++nvqH/mZQmyTCzfnqBbX+Mmgh3bFGrdXgiy4g/R1NEIxyZIzSGzbjc5cQ9k/79de4lul
      UChw4cIFVlZW2LNnDzMzMzidTmpqarh27RojIyMYDIZd9wV6dCqdVGRlJUDGmKaYq2NyaY6W
      /iM01dcA0NzWhcPrRyHqycWDKM31eGbv0jpwDCQZhBSz9ihvvnkMdyBJdmuONW0v2a15qrQC
      U45txKKEWixw6LWzzA9dIyOqqak2IJS3021KsegK0v/SK4SWRvC6HdS8fBCQQaWltr4Gg1qJ
      IBSx3bvDosvPCy+fYvnmHQQ1HHr1bTqrrcjxCN6AkWarhhVnmM4DB7k+OMovt92cef0E/i0/
      qxMfU3U4xw/+4PiubmSJJ49Wq6WxsRGj0ciJEyeYnJzEZDLx7rvvMjk5SUdHx65tPPJnTywW
      8EWiJCJBMpkC6jIjLS1NXLt66cH7yjJ6e3vJx4Ks22w0tdVweWQen3uRFfs6skKJQhZQGy14
      l6fZie6wkxYIBoMkEzHaDxxDLkoc6akluB2loLbSrtPQc/w4sdAWQzeGkGSBaGydrXA5r598
      4WHBit5cyZ7uDnQaFch5XM4NkmE/9o1N0oKJM0c6WV3zgMqAUS+xkYWWCiX2uESzQUF1ax97
      m3QEQhG2YxI9+/fzxskju76RJZ4sGo2GU6dOkc/ncblcX3ovFouh1WrRanev8/DIJ4BKb2Hg
      9FmarBry5d3oU3UMjY3R0vEgwLW2co8lVwBzXTPucIS3TzbyX//7f8O3PEvU1IpCZeTlFzu5
      evk6Sn0t1toG7twaRGvQYjRbKTNoqa2vRV9ejlmtp7a2CgsFDGVaaqur6bUexhUVsZgasehs
      jK0UaT6mAZQ0tLRSW1OFlE5TUykgRjRU1jdRVa7H5VllSJvmpdffART0Ndcwl9DTWKnCViGj
      0eiprTRj0krIBiO1VUqa9DXcHp/hpQ4z2roGtpzbHDzUu+sbW2J3FItFRkZGSCQSHDx4kMHB
      QTY2NqisrCSXy9Hf3/9E7OyqHqAQsTG0KvP2qb1PZDK7I830xAZHX3oyN6bEt08ulyObzWK1
      Wp+ajf8HZHiKfcW1ObMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='profit by sub category' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sales and profit by date' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='sales bystate' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
